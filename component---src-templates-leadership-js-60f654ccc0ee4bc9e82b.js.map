{"version":3,"file":"component---src-templates-leadership-js-60f654ccc0ee4bc9e82b.js","mappings":"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","sources":["webpack://uclathetatau/./src/components/Content.js","webpack://uclathetatau/./src/components/Features.js","webpack://uclathetatau/./src/components/FullWidthImageSmall.js","webpack://uclathetatau/./src/components/Layout.js","webpack://uclathetatau/./src/components/PreviewCompatibleImage.js","webpack://uclathetatau/./src/templates/leadership.js"],"sourcesContent":["import * as React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n);\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n);\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string,\n};\n\nHTMLContent.propTypes = Content.propTypes;\n\nexport default Content;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport PreviewCompatibleImage from \"../components/PreviewCompatibleImage\";\nimport \"./styles.css\";\n\nconst FeatureGrid = ({ gridItems }) => (\n  <div className=\"columns is-multiline grid-columns\" \n  style = {{\n    width: \"100%\",\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n  }}>\n    {gridItems.map((item) => (\n      <div key={item.text} className=\"column is-3\">\n        <section className=\"section\" style={{\n          \n        }}>\n          <div>\n            <div\n              style={{\n                width: \"100%\",\n                justifyContent: \"center\",\n                display: \"grid\",\n              }}\n            >\n              <PreviewCompatibleImage imageInfo={item}/>\n            </div>\n          </div>\n          <div style = {{\n            textAlign: \"center\",\n          }}>\n            <p style={{\n              fontWeight: \"bold\",\n              marginTop: \"5px\",\n              fontSize: \"1.2rem\",\n            }}>{item.text}</p>\n            <p>{item.major}</p>\n            <p>{item.year}</p>\n          </div>\n        </section>\n      </div>\n    ))}\n  </div>\n);\n\nFeatureGrid.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n      text: PropTypes.string,\n      major: PropTypes.string,\n      year: PropTypes.string,\n    })\n  ),\n};\n\nexport default FeatureGrid;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport \"./styles.css\";\n\nexport default function FullWidthImageSmall(props) {\n  const {\n    height = \"100vh\",\n    img,\n    title,\n    subheading,\n    imgPosition = \"center\",\n  } = props;\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"margin-top-0\"\n        style={{\n          display: \"grid\",\n          alignItems: \"center\",\n          backgroundColor: \"black\",\n          backgroundColor: \"#40140f\",\n          zIndex: -1,\n          paddingTop: '0px',\n        }}\n      >\n        {img?.url ? (\n          <img\n            src={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              height: height,\n              width: \"100%\",\n            }}\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        ) : (\n          <GatsbyImage\n            image={img}\n            objectFit={\"cover\"}\n            objectPosition={imgPosition}\n            style={{\n              gridArea: \"1/1\",\n              // You can set a maximum height for the image, if you wish.\n              maxHeight: height,\n              minHeight: \"100vh\",\n              opacity: 0.5,\n            }}\n            layout=\"fullWidth\"\n            // You can optionally force an aspect ratio for the generated image\n            aspectratio={3 / 1}\n            // This is a presentational image, so the alt should be an empty string\n            alt=\"\"\n            formats={[\"auto\", \"webp\", \"avif\"]}\n          />\n        )}\n        {(title || subheading) && (\n          <div\n            style={{\n              // By using the same grid area for both, they are stacked on top of each other\n              paddingTop: \"1vmax\",\n              // paddingBottom: \"10vmax\",\n              gridArea: \"1/1\",\n              position: \"relative\",\n              // This centers the other elements inside the hero component\n              placeItems: \"center\",\n              display: \"grid\",\n            }}\n          >\n            {/* Any content here will be centered in the component */}\n            {title && (\n              <h1\n                className=\"has-text-weight-bold homefont\"\n                style={{\n                  // boxShadow:\n                    // \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n                  // backgroundColor: \"rgb(255, 68, 0)\",\n                  color: \"white\",\n                  borderColor: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25em\",\n                  // fontSize: \"3.5rem\",\n                }}\n              >\n                {title}\n              </h1>\n            )}\n            {subheading && (\n              <h3\n                className=\"is-size-5-mobile is-size-5-tablet is-size-4-widescreen\"\n                style={{\n                  // boxShadow:\n                  //   \"rgb(255, 68, 0) 0.5rem 0px 0px, rgb(255, 68, 0) -0.5rem 0px 0px\",\n                  // backgroundColor: \"rgb(255, 68, 0)\",\n                  color: \"white\",\n                  lineHeight: \"1\",\n                  padding: \"0.25rem\",\n                  marginTop: \"0.5rem\",\n                  textAlign: \"center\",\n                  marginBottom: \"3.3vmax\",\n                }}\n              >\n                {subheading}\n              </h3>\n            )}\n          </div>          \n        )}\n        \n      </div>\n    </React.Fragment>\n  );\n}\n\nFullWidthImageSmall.propTypes = {\n  img: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  height: PropTypes.number,\n  subheading: PropTypes.string,\n};\n","import * as React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport Footer from \"../components/Footer\";\nimport Navbar from \"../components/Navbar\";\nimport \"./all.sass\";\nimport useSiteMetadata from \"./SiteMetadata\";\nimport { withPrefix } from \"gatsby\";\n\nconst TemplateWrapper = ({ children }) => {\n  const { title, description } = useSiteMetadata();\n  return (\n    <div>\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{title}</title>\n        <meta name=\"description\" content={description} />\n\n        <link\n          rel=\"apple-touch-icon\"\n          sizes=\"180x180\"\n          href={`${withPrefix(\"/\")}img/apple-touch-icon.png`}\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href={`${withPrefix(\"/\")}img/favicon-32x32.png`}\n          sizes=\"32x32\"\n        />\n        <link\n          rel=\"icon\"\n          type=\"image/png\"\n          href={`${withPrefix(\"/\")}img/favicon-16x16.png`}\n          sizes=\"16x16\"\n        />\n\n        <link\n          rel=\"mask-icon\"\n          href={`${withPrefix(\"/\")}img/safari-pinned-tab.svg`}\n          color=\"#ff4400\"\n        />\n        <meta name=\"theme-color\" content=\"#fff\" />\n\n        <meta property=\"og:type\" content=\"business.business\" />\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:url\" content=\"/\" />\n        <meta\n          property=\"og:image\"\n          content={`${withPrefix(\"/\")}img/og-image.jpg`}\n        />\n      </Helmet>\n      <Navbar />\n      <div>{children}</div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default TemplateWrapper;\n","import * as React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst PreviewCompatibleImage = ({ imageInfo }) => {\n  const imageStyle = { borderRadius: \"5px\" };\n\n  const { alt = \"\", childImageSharp, image } = imageInfo;\n\n  if (!!image && !!image.childImageSharp) {\n    return (\n      <GatsbyImage\n        image={image.childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    );\n  } else if (!!childImageSharp) {\n    return (\n      <GatsbyImage\n        image={childImageSharp.gatsbyImageData}\n        style={imageStyle}\n        alt={alt}\n      />\n    );\n    // for Netlify CMS \n  } else if (image) {\n    return <img style={{imageStyle}} src={image} alt={alt} />;\n  } else {\n    return null\n  }\n};\n\nPreviewCompatibleImage.propTypes = {\n  imageInfo: PropTypes.shape({\n    alt: PropTypes.string,\n    childImageSharp: PropTypes.object,\n    image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]).isRequired,\n    style: PropTypes.object,\n  }).isRequired,\n};\n\nexport default PreviewCompatibleImage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Content, { HTMLContent } from \"../components/Content\";\nimport Features from \"../components/Features\";\n\nimport { getImage } from \"gatsby-plugin-image\";\n\nimport FullWidthImageSmall from \"../components/FullWidthImageSmall\";\n\n// eslint-disable-next-line\nexport const LeadershipPageTemplate = ({\n  image,\n  title,\n  subheading,\n  positions,\n}) => {\n  const heroImage = getImage(image) || image;\n\n  return (\n    <div>\n      <FullWidthImageSmall img={heroImage} title={title} subheading={subheading} />\n\n      <p className = \"classHeader\" style={{\n        marginTop: \"40px\",\n      }}>Executive Board</p>\n      <Features gridItems={positions.exec} />\n\n      <p className = \"classHeader\">Chairs</p>\n      <Features gridItems={positions.chairs} />\n    </div>\n  );\n};\n\nLeadershipPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  subheading: PropTypes.string,\n  positions: PropTypes.shape({\n    exec: PropTypes.array,\n    chairs: PropTypes.array,\n  }),\n};\n\nconst LeadershipPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark;\n\n  return (\n    <Layout>\n      <LeadershipPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        subheading={frontmatter.subheading}\n        mainpitch={frontmatter.mainpitch}\n        description={frontmatter.description}\n        positions={frontmatter.positions}\n      />\n    </Layout>\n  );\n};\n\nLeadershipPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n};\n\nexport default LeadershipPage;\nexport const LeadershipPageQuery = graphql`\n  query LeadershipPage($id: String!) {\n    markdownRemark(id: { eq: $id} frontmatter: { templateKey: { eq: \"leadership\" } }) {\n      frontmatter {\n        title\n        heading\n        subheading\n        positions {\n          exec {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            text\n            major\n          }\n          chairs {\n            image {\n              childImageSharp {\n                gatsbyImageData(width: 240, quality: 100, layout: CONSTRAINED)\n              }\n            }\n            text\n            major\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["HTMLContent","content","className","dangerouslySetInnerHTML","__html","gridItems","style","width","maxWidth","margin","map","item","key","text","justifyContent","display","imageInfo","textAlign","fontWeight","marginTop","fontSize","major","year","FullWidthImageSmall","props","height","img","title","subheading","imgPosition","alignItems","backgroundColor","zIndex","paddingTop","url","src","objectFit","objectPosition","gridArea","aspectratio","alt","formats","G","image","maxHeight","minHeight","opacity","layout","position","placeItems","color","borderColor","lineHeight","padding","marginBottom","children","useSiteMetadata","description","lang","name","rel","sizes","href","withPrefix","type","property","imageStyle","borderRadius","childImageSharp","gatsbyImageData","LeadershipPageTemplate","positions","heroImage","getImage","exec","chairs","frontmatter","data","markdownRemark","heading","mainpitch"],"sourceRoot":""}